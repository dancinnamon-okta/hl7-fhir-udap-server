#This is the config file for deploying a reference implementation of a UDAP compatible authorization service.

service: udap-server

plugins:
  - serverless-certificate-creator
  - serverless-domain-manager

params:
  default:
    AWS_REGION: us-east-1

    #The domain name you want publicly as the base domain name.
    BASE_DOMAIN: your.domain.tld

    #Route53 hosted domain (include the period at the end)
    BASE_TLD: domain.tld.
    
    #Base URL of the FHIR server that this implementation is protecting.
    FHIR_BASE_URL: https://your.fhir.server

    #Used by well known metadata logic to calculate paths for oauth endpoints.
    OAUTH_AUTHORIZE_ENDPOINT_PATTERN: https://${param:BASE_DOMAIN}/oauth2/<resource_server_id>/v1/authorize
    OAUTH_TOKEN_ENDPOINT_PATTERN: https://${param:BASE_DOMAIN}/oauth2/<resource_server_id>/v1/token
    OAUTH_REGISTRATION_ENDPOINT_PATTERN: https://${param:BASE_DOMAIN}/oauth2/<resource_server_id>/register

    TIERED_OAUTH_REDIRECT_PATH: /oauth2/v1/authorize/callback

    #The hostname used for vanity URLs on the backend authz server.
    OAUTH_CUSTOM_DOMAIN_NAME_BACKEND: youroktatenantsubdomain.customdomains.oktapreview.com

    #OAuth Org settings for calling the management endpoint.
    OAUTH_ORG: youroktatenantsubdomain.oktapreview.com
    OAUTH_CLIENT_ID: client_id_for_okta_m2m_app_for_management_api
    OAUTH_PRIVATE_KEY_FILE: ./private_key_jwks_file_from_app_in_okta
    OAUTH_CLIENT_TOKEN_ENDPOINT: https://${param:OAUTH_ORG}/oauth2/v1/token

    #Details to use for dynamic client registration as a tiered-oauth data holder.
    ORGANIZATION_NAME: your_org_name_here
    ORGANIZATION_ID: https://your_org_id_here
    PURPOSE_OF_USE: urn:oid:2.16.840.1.113883.5.8#TREAT
    LOGO_URI: https://your_logo_uri_here


    IDP_MAPPING_TABLE_NAME: udap_tiered_oauth_idp_mapping
    SAN_REGISTRY_TABLE_NAME: san_client_id_mapping

    #The backend domain name for the api gateway deployment.
    API_GATEWAY_DOMAIN_NAME_BACKEND: api_gateway_custom_domain_backend_url

    #This should be 'okta' or 'auth0'
    OAUTH_PLATFORM: okta

##YOU SHOULD NOT NEED TO TOUCH ANYTHING BELOW THIS LINE
provider:
  name: aws
  runtime: nodejs16.x
  stage: sandbox
  region: ${param:AWS_REGION}

  logs:
    restApi: true

  environment:
    BASE_DOMAIN: ${param:BASE_DOMAIN}
    FHIR_BASE_URL: ${param:FHIR_BASE_URL}
    OAUTH_CUSTOM_DOMAIN_NAME_BACKEND: ${param:OAUTH_CUSTOM_DOMAIN_NAME_BACKEND}

    OAUTH_AUTHORIZE_ENDPOINT_PATTERN: ${param:OAUTH_AUTHORIZE_ENDPOINT_PATTERN}
    OAUTH_TOKEN_ENDPOINT_PATTERN: ${param:OAUTH_TOKEN_ENDPOINT_PATTERN}
    OAUTH_REGISTRATION_ENDPOINT_PATTERN: ${param:OAUTH_REGISTRATION_ENDPOINT_PATTERN}

    TIERED_OAUTH_REDIRECT_ENDPOINT: https://${param:BASE_DOMAIN}${param:TIERED_OAUTH_REDIRECT_PATH}

    OAUTH_ORG: ${param:OAUTH_ORG}
    OAUTH_CLIENT_ID: ${param:OAUTH_CLIENT_ID}
    OAUTH_PRIVATE_KEY_FILE: ${param:OAUTH_PRIVATE_KEY_FILE}
    OAUTH_CLIENT_TOKEN_ENDPOINT: ${param:OAUTH_CLIENT_TOKEN_ENDPOINT}

    ORGANIZATION_NAME: ${param:ORGANIZATION_NAME}
    ORGANIZATION_ID: ${param:ORGANIZATION_ID}
    PURPOSE_OF_USE: ${param:PURPOSE_OF_USE}
    LOGO_URI: ${param:LOGO_URI}

    IDP_MAPPING_TABLE_NAME: ${param:BASE_DOMAIN}_${param:IDP_MAPPING_TABLE_NAME}
    SAN_REGISTRY_TABLE_NAME: ${param:BASE_DOMAIN}_${param:SAN_REGISTRY_TABLE_NAME}

    OAUTH_PLATFORM: ${param:OAUTH_PLATFORM}

#Provide additional access to allow read/write to our refresh token cache
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        Fn::GetAtt:
          - idpMappingTable
          - Arn

    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource:
        Fn::GetAtt:
          - udapSanRegistry
          - Arn

#Lambda functions
functions:

##TOKEN ENDPOINT THAT VALIDATES INBOUND JWTs AGAINST THE TRUST COMMUNITIES
  token-proxy:
    handler: ${self:provider.name}/token.tokenHandler
    timeout: 20
    events:
      - http:
          path: /oauth2/{resourceServerId}/v1/token
          method: POST
          cors: true

##OUTBOUND TOKEN ENDPOINT THAT PERFORMS UDAP SPECIFIC STUFF IN THE FINAL /TOKEN REQUEST.
  tiered-token-client:
    handler: ${self:provider.name}/tiered_token_client.tieredTokenClientHandler
    timeout: 20
    events:
      - http:
          path: /{idpId}/tiered_client/token
          method: POST
          cors: true

##Trusted UDAP DCR Proxy
  tdcr_udap:
    handler: ${self:provider.name}/tdcr_udap.clientRegistrationHandler
    timeout: 20
    events:
      - http:
          path: /oauth2/{resourceServerId}/register
          method: POST

##AUTHORIZE PROXY THAT PERFORMS TIERED-OAUTH2
  authorize-proxy:
    handler: ${self:provider.name}/authorize.authorizeHandler
    timeout: 20
    events:
      - http:
          path: /oauth2/{resourceServerId}/v1/authorize
          method: GET

##WELL KNOWN FOR UDAP IDP
  udap_well_known:
    handler: ${self:provider.name}/udap_well_known.udapConfigHandler
    timeout: 20
    events:
      - http:
          path: /oauth2/{resourceServerId}/.well-known/udap
          method: GET

custom:
  customCertificate:
    certificateName: ${param:BASE_DOMAIN}
    hostedZoneNames: ${param:BASE_TLD}
    subjectAlternativeNames:
      - ${param:BASE_DOMAIN}

  customDomain:
    domainName: ${param:BASE_DOMAIN}
    certificateName: ${param:BASE_DOMAIN}
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: false
    endpointType: regional

resources:
  Resources:
    authzServiceCFDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${param:BASE_DOMAIN}
          Origins:
            - ConnectionAttempts: 3
              ConnectionTimeout: 10
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginKeepaliveTimeout: 5
                OriginProtocolPolicy: https-only
                OriginReadTimeout: 30
                OriginSSLProtocols:
                  - TLSv1.2
              DomainName: ${param:API_GATEWAY_DOMAIN_NAME_BACKEND}
              Id: ${param:API_GATEWAY_DOMAIN_NAME_BACKEND}
              OriginPath: ""
            - ConnectionAttempts: 3
              ConnectionTimeout: 10
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginKeepaliveTimeout: 5
                OriginProtocolPolicy: https-only
                OriginReadTimeout: 30
                OriginSSLProtocols:
                  - TLSv1.2
              DomainName: ${param:OAUTH_CUSTOM_DOMAIN_NAME_BACKEND}
              Id: ${param:OAUTH_CUSTOM_DOMAIN_NAME_BACKEND}
              OriginPath: ""
          DefaultCacheBehavior:
            AllowedMethods:
              - HEAD
              - DELETE
              - POST
              - GET
              - OPTIONS
              - PUT
              - PATCH
            Compress: false
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
            SmoothStreaming: false
            TargetOriginId: ${param:OAUTH_CUSTOM_DOMAIN_NAME_BACKEND}
            ViewerProtocolPolicy: https-only
          CacheBehaviors:
            - AllowedMethods:
                - HEAD
                - DELETE
                - POST
                - GET
                - OPTIONS
                - PUT
                - PATCH
              Compress: false
              CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
              OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
              PathPattern: /oauth2/*/v1/token
              SmoothStreaming: false
              TargetOriginId: ${param:API_GATEWAY_DOMAIN_NAME_BACKEND}
              ViewerProtocolPolicy: https-only
            - AllowedMethods:
                - HEAD
                - DELETE
                - POST
                - GET
                - OPTIONS
                - PUT
                - PATCH
              Compress: false
              CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
              OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
              PathPattern: /oauth2/*/v1/authorize
              SmoothStreaming: false
              TargetOriginId: ${param:API_GATEWAY_DOMAIN_NAME_BACKEND}
              ViewerProtocolPolicy: https-only
            - AllowedMethods:
                - HEAD
                - DELETE
                - POST
                - GET
                - OPTIONS
                - PUT
                - PATCH
              Compress: false
              CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
              OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
              PathPattern: /oauth2/*/register
              SmoothStreaming: false
              TargetOriginId: ${param:API_GATEWAY_DOMAIN_NAME_BACKEND}
              ViewerProtocolPolicy: https-only
            - AllowedMethods:
                - HEAD
                - DELETE
                - POST
                - GET
                - OPTIONS
                - PUT
                - PATCH
              Compress: false
              CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
              OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
              PathPattern: /*/tiered_client/token
              SmoothStreaming: false
              TargetOriginId: ${param:API_GATEWAY_DOMAIN_NAME_BACKEND}
              ViewerProtocolPolicy: https-only
            - AllowedMethods:
                - HEAD
                - DELETE
                - POST
                - GET
                - OPTIONS
                - PUT
                - PATCH
              Compress: false
              CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
              OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
              PathPattern: /oauth2/*/.well-known/udap
              SmoothStreaming: false
              TargetOriginId: ${param:API_GATEWAY_DOMAIN_NAME_BACKEND}
              ViewerProtocolPolicy: https-only
          Comment: ""
          PriceClass: PriceClass_All
          Enabled: true
          ViewerCertificate:
            AcmCertificateArn: ${certificate(${self:custom.customCertificate.certificateName}):CertificateArn}
            MinimumProtocolVersion: TLSv1.2_2021
            SslSupportMethod: sni-only
          Restrictions:
            GeoRestriction:
              RestrictionType: none
          HttpVersion: http2
          DefaultRootObject: ""
          IPV6Enabled: false

    idpMappingTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.IDP_MAPPING_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: idp_id
            AttributeType: S
        KeySchema:
          - AttributeName: idp_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    udapSanRegistry:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: ${self:provider.environment.SAN_REGISTRY_TABLE_NAME}
          AttributeDefinitions:
            - AttributeName: subject_alternative_name
              AttributeType: S
          KeySchema:
            - AttributeName: subject_alternative_name
              KeyType: HASH
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
